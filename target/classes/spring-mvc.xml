<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 配置自动扫描包 -->
	<context:component-scan base-package="com.atgugu.demo.web.handlers"/>
	
	<!-- 配置springMVC前后缀 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 放行静态资源 -->
	<mvc:annotation-driven/>
	<mvc:default-servlet-handler/>
	
	<!-- 根据配置自动跳转的页面 -->
	<mvc:view-controller path="user/toRegist" view-name="user_regist"/>
	<mvc:view-controller path="user/toLogin" view-name="user_login"/>
	<mvc:view-controller path="user/toPersonalCenter" view-name="user_center"/>
	
	<!-- 配置springMVC文件上传解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"/>
		<property name="maxUploadSize" value="#{1024*1024*100}"/>
	</bean>
	
	<!-- 导入外部属性文件 -->
	<context:property-placeholder location="classpath:connection.properties" />

	<!-- 引入HttpClient的配置信息 -->
	
	<!-- 定义连接管理器 -->
	<bean id="httpClientConnectionManager"
		class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager"
		destroy-method="close">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="${http.maxTotal}" />

		<!-- 设置每个主机地址的并发数 -->
		<property name="defaultMaxPerRoute" value="${http.defaultMaxPerRoute}" />
	</bean>

	<!-- httpclient对象构建器 -->
	<bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder">
		<!-- 设置连接管理器 -->
		<property name="connectionManager" ref="httpClientConnectionManager" />
	</bean>

	<!-- 定义Httpclient对象 -->
	<bean id="httpClient" class="org.apache.http.impl.client.CloseableHttpClient"
		factory-bean="httpClientBuilder" factory-method="build" scope="prototype">
	</bean>

	<!-- 定义清理无效连接 -->
	<bean class="com.atgugu.demo.web.user.client.IdleConnectionEvictor"
		destroy-method="shutdown">
		<constructor-arg index="0" ref="httpClientConnectionManager" />
	</bean>

	<bean id="requestConfigBuilder" class="org.apache.http.client.config.RequestConfig.Builder">
		<!-- 创建连接的最长时间 -->
		<property name="connectTimeout" value="${http.connectTimeout}" />
		<!-- 从连接池中获取到连接的最长时间 -->
		<property name="connectionRequestTimeout" value="${http.connectionRequestTimeout}" />
		<!-- 数据传输的最长时间 -->
		<property name="socketTimeout" value="${http.socketTimeout}" />
		<!-- 提交请求前测试连接是否可用 -->
		<property name="staleConnectionCheckEnabled" value="${http.staleConnectionCheckEnabled}" />
	</bean>
	<!-- 定义请求配置参数 -->
	<bean id="requestConfig" class="org.apache.http.client.config.RequestConfig"
		factory-bean="requestConfigBuilder" factory-method="build">
	</bean>
	
	<!-- 配置异常映射 -->
	<bean id="simpleMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.atguigu.demo.common.exception.UserNameExistsRegistFailException">error</prop>
				<prop key="com.atguigu.demo.common.exception.LoginFailException">error</prop>
				<prop key="com.atguigu.demo.common.exception.RemoveFileFailException">error</prop>
				<prop key="com.atguigu.demo.common.exception.TrackerConfigNotFoundException">error</prop>
				<prop key="com.atguigu.demo.common.exception.UploadFailedException">error</prop>
				<prop key="com.atguigu.demo.common.exception.UserMessageUpdateFailException">error</prop>
			</props>
		</property>
	</bean>
</beans>
